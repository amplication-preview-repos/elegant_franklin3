/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { LeaderboardListRelationFilter } from "../../leaderboard/base/LeaderboardListRelationFilter";
import { PlayerWhereUniqueInput } from "../../player/base/PlayerWhereUniqueInput";
import { ScoreListRelationFilter } from "../../score/base/ScoreListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class RaceWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LeaderboardListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LeaderboardListRelationFilter)
  @IsOptional()
  @Field(() => LeaderboardListRelationFilter, {
    nullable: true,
  })
  leaderboards?: LeaderboardListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlayerWhereUniqueInput)
  @IsOptional()
  @Field(() => PlayerWhereUniqueInput, {
    nullable: true,
  })
  player?: PlayerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ScoreListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ScoreListRelationFilter)
  @IsOptional()
  @Field(() => ScoreListRelationFilter, {
    nullable: true,
  })
  scores?: ScoreListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  track?: StringNullableFilter;
}

export { RaceWhereInput as RaceWhereInput };
